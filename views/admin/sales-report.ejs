
<%- include('../includes/admin/adminHead.ejs') %>
<%- include('../includes/admin/adminNavbar.ejs') %>
<style>
    .dropdown-menu a:hover{
        color: white!important;
        cursor: pointer;
    }
    .pagination-btn{
    padding: 50px;
    width: 100%;
    display: flex;
    justify-content: center;
    }
    .pagination-btn a{
        text-decoration: none;
        color: #ececec;
    }
    .pagination-btn a :hover{
        color: #111;
    }
    .pagination-btn button:hover{
        color: #111;
    }
    .pagination-btn button:active{
        background-color: #fff;
        color: #111!important;
    }
    .header {
    background-color: rgb(62, 136, 161);
    color: white;
    }
    .wide-table {
        width: 100%;
    }


.summary {
    font-weight: bold;
}

    
</style>

<div class="main-panel">
  SALES REPORT

<div class="row mt-5">
    <div class="col-12 grid-margin">
      <div class=" row   mt-3">

        <div class="col-12 col-sm-6">
          <div class="row m-0">
            <div class="col-md-4">
              <div class="form-group row">
                <div class="col-sm-12">
                  <form action="/admin/sales-report">
                  <select class="form-control" name="sortData">
                    <option value="custom">Custom</option>
                    <option value="daily">Daily</option>
                    <option value="weekly">Weekly</option>
                    <option value="monthly">Monthly</option>
                    <option value="yearly">Yearly</option>

                  </select>
                </div>
              </div>
            </div>

            
          </form>
          </div>
        </div>

        </div>
        <div>
        <div class="row">
          <form class="col-12" action="/admin/sales-report<% if(typeof seeAll !== 'undefined' && seeAll){ %>?seeAll=seeAll<% } %>" id="sales-report-form">
              <div class="row">
                  <div class="col-12 col-sm-3 mb-3">
                      <label for="from">&emsp;Starting Date:</label>
                      <input style="background-color: #dcdcdc; border-radius: 5px; border: none; padding: 0px 10px;" value="<%= from %>" type="date" id="from" name="from">
                  </div>
                  <div class="col-12 col-sm-3 mb-3">
                      <label class="" for="to">Ending Date:</label>
                      <input style="background-color: #dcdcdc; border-radius: 5px; border: none; padding: 0px 10px;" value="<%= to %>" type="date" id="to" name="to">
                  </div>
                  <div class="col-12 col-sm-3 mb-3">
                      <button class="btn btn-primary" type="submit">Filter</button>
                  </div>
              </div>
          </form>
      </div>
      </div>
      
      
        <div class="ml-3">

          <button type="button" onclick="excelDownload()" id="excel-export" class="btn btn-primary btn-icon-text ml-auto mb-1"> Excel <i class="mdi mdi-printer btn-icon-append"></i>
            <button type="button" onclick="generatePDF()" class="btn btn-primary btn-icon-text ml-1 mr-auto mb-1">PDF <i class="mdi mdi-file-pdf-box btn-icon-append"></i>
          </button>
        </div>
    </div>
      <div class="card">
        <div class="card-body">
          <div class = "row">
            <div class = "col-sm-8">
          <h4 class="card-title mb-0">Recent sales</h4>
          </div>
          <div class="table-responsive" id="Print">
            <div class="container">
              <table class="table wide-table" id="sales-table">
                  <thead>
                      <tr>
                          <th class="header">Date</th>
                          <th class="header">OrderId</th>
                          <th class="header">Payment</th>
                          <th class="header">Amount</th>
                          <th class="header">Discount</th>
        
                          <th class="header">Order Status</th>
                      </tr>
                  </thead>
                  <tbody>
                      <% for (let order of orders) { %>
                          <tr>
                              <td><%= moment(order.date).format(shortDateFormat) %></td>
                              <td><%= order._id %></td>
                              <td><%= order.paymentMethod %></td>
                              <td><%= order.totalPrice %></td>
                              <td><%= order.discounted %></td>
                              <td id="order-status-<%= order._id %>">
                                  <% if (order.orderStatus) { %>
                                      <%= order.orderStatus %>
                                  <% } else { %>
                                      Pending
                                  <% } %>
                              </td>
                          </tr>
                      <% } %>
                  </tbody>
              </table>
          </div>
          <br><br>
          <div class="container">
              <div class="row">
                  <div class="col">
                      <p class="summary">Overall sales count   : <%= overallSalesCount %></p>
                  </div>
                  <div class="col">
                      <p class="summary">Overall order amount  : <%= overallOrderAmount %></p>
                  </div>
                  <div class="col">
                    <p class="summary">Overall discounted amount  : <%= overallDiscountAmount %></p>
                </div>
               
              </div>
          </div>
          
          </div>
        </div>
      </div>

     


    </div>
  </div>

</div>
</div>
</div>
</div>

<!-- The popup message modal -->
<div id="popupModal" class="modal fade" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
  <div class="modal-content bg-light text-dark">
      <div class="modal-body">
      <h5 id="modalHead" class="modal-title"></h5><br>
      <p id="modalContent"></p>
      </div>
  </div>
  </div>
</div>

<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.3/jspdf.umd.min.js"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.3/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.19/jspdf.plugin.autotable.min.js"></script>

<script>

// Function to calculate starting and ending dates based on selected data
function setDates() {
  const sortData = document.querySelector('select[name="sortData"]').value;
  const today = new Date();
  let from, to;

  // Retrieve saved dates from local storage, or default to today's date
  const savedFromDate = localStorage.getItem('fromDate');
  const savedToDate = localStorage.getItem('toDate');

  if (savedFromDate && savedToDate) {
    from = new Date(savedFromDate);
    to = new Date(savedToDate);
  } else {
    from = new Date(today);
    to = new Date(today);
  }

  switch (sortData) {


        case "custom":
        const customFrom = document.getElementById('custom-from').value;
            const customTo = document.getElementById('custom-to').value;
            if (customFrom && customTo) {
                from = new Date(customFrom);
                to = new Date(customTo);
            }
        break;
      
        case "daily":
        from = new Date(today);
        to = new Date(today);
        break;
    
        case "weekly":
        from = new Date(today);
        from.setDate(today.getDate() - 6);
        to = new Date(today);
        break;
      
        case "monthly":
        from = new Date(today.getFullYear(), today.getMonth(), 1);
        to = new Date(today);
        break;
      
        case "yearly":
        from = new Date(today.getFullYear(), 0, 1);
        to = new Date(today);
        break;
      
      
        default:
        
        from = new Date(today);
        to = new Date(today);
        break;
    }

  // Format dates as strings in YYYY-MM-DD format
  const fromDate = formatDate(from);
  const toDate = formatDate(to);

  // Set input field values
  document.getElementById('from').value = fromDate;
  document.getElementById('to').value = toDate;

  // Save dates to local storage
  localStorage.setItem('fromDate', fromDate);
  localStorage.setItem('toDate', toDate);
}

// Helper function to format date as YYYY-MM-DD
function formatDate(date) {
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const day = String(date.getDate()).padStart(2, '0');
  return `${year}-${month}-${day}`;
}

// Call setDates function when the sortData select changes
document.querySelector('select[name="sortData"]').addEventListener('change', setDates);

// Call setDates initially to set the dates when the page loads
setDates();


function generatePDF() {
    const doc = new jsPDF();
    const element = document.getElementById("Print");

    // Get the table headers
    const headers = Array.from(element.querySelectorAll("thead th")).map(th => th.innerText);

    // Get the table rows
    const rows = Array.from(element.querySelectorAll("tbody tr")).map(tr => {
        return Array.from(tr.querySelectorAll("td")).map(td => td.innerText);
    });

    // Set initial y position for placing content
    let y = 10;

    // Create a new jsPDF table
    doc.autoTable({
        startY: y,
        head: [headers],
        body: rows
    });

    // Save the PDF
    doc.save("sales-report.pdf");
}


function excelDownload() {
    // Get the table data
    var table = document.getElementById("sales-table");
    var wb = XLSX.utils.table_to_book(table, { sheet: "SheetJS" });

    // Convert the workbook to an array buffer
    var wbout = XLSX.write(wb, { bookType: "xlsx", type: "array" });

    // Create a Blob object to store the workbook data
    var blob = new Blob([wbout], { type: "application/octet-stream" });

    // Generate a temporary anchor element and trigger the download
    var a = document.createElement("a");
    document.body.appendChild(a);
    a.style = "display: none";
    var url = window.URL.createObjectURL(blob);
    var today = formatDateToString( new Date() )
    a.href = url;
    a.download = "MF-"+today+".xlsx";
    a.click();

    // Cleanup
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  }

  
 

  const dateForm = document.getElementById('sales-report-form')
  
  
  dateForm.addEventListener( 'submit' , function(event){
    const now = new Date()
    // const fromDate = document.getElementById( 'from' )
    const from = document.getElementById( 'from' ).value
    const to = document.getElementById( 'to' ).value
    const fromDate = new Date( from )
    const toDate = new Date( to )
    if( fromDate > now ){
      showModal('Warning', 'From date cannot be greater than Today')
      event.preventDefault()
    }
    if( toDate > now) {
      showModal('Warning', 'To date cannot be greater than Today')
      event.preventDefault()
    }
    if( fromDate > toDate ) {
      showModal('Warning', 'From date cannot be greater than To date')
      event.preventDefault()
    }
  })
  

    function printDiv( divName ) {
        const printContents = document.getElementById( divName ).innerHTML
        const originalContents = document.body.innerHTML
        document.body.innerHTML = printContents;
        window.print()
        document.body.innerHTML = originalContents
        return
    }

    function showModal(title,message) {

    const modalTitle = document.getElementById('modalHead')
    const modalBody = document.getElementById('modalContent')

    modalTitle.innerText = title;
    modalBody.innerText = message;


    // Show the popup message modal
    $('#popupModal').modal('show');

    // Hide the popup message modal when clicking outside of it
    $(document).on('click', function(event) {
    if (!$(event.target).closest('.modal-content').length) {
      $('#popupModal').modal('hide');
    }
    });

    }
</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>

<script>
  function formatDateToString(date) {
  // Ensure we have a valid date object
  if (!(date instanceof Date) || isNaN(date)) {
    return "Invalid Date";
  }

  // Get the day, month, and year components from the date
  const day = String(date.getDate()).padStart(2, "0");
  const month = String(date.getMonth() + 1).padStart(2, "0");
  const year = String(date.getFullYear());

  // Concatenate the components with hyphens and return the formatted string
  return `${day}-${month}-${year}`;
}

// Example usage:
const date = new Date(); // Replace this with your date object
const formattedDate = formatDateToString(date);




</script>




<%- include('../includes/admin/adminFooter.ejs') %>